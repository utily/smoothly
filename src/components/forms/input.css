:host {
	font-weight: var(--smoothly-font-weight);
	color: rgb(var(--text-color, var(--smoothly-default-contrast)));
	width: 100%;
}

.input-container {
	display: flex;
	align-items: center;
	gap: 0.6em;
	padding: 1.3em 0.6em 0.3em 0.6em;
	cursor: inherit;
	position: relative;
	background-color: rgb(var(--background-color));
}

:host[placement="start"] .input-container {
	padding: 0.75em 0.6em;
}

:host[placement="outside"] .input-container {
	padding: 0.75em 0.6em;
	margin-top: 0.8em;
}

:host[focused][layout="border"] .input-container, :host[layout="border"] .input-container:hover  {
  box-shadow:  0 0 0.5px 0.5px rgba(var(--smoothly-medium-shade), .5);
}

:host[focused][layout="grid"] .input-container, :host[layout="grid"] .input-container:hover {
  box-shadow: inset 0 0 0px 0.5px rgba(var(--smoothly-medium-shade), .3);
}

:host[focused][layout="line"] .input-container, :host[layout="line"] .input-container:hover {
  box-shadow:  0px 1px 0px rgba(var(--smoothly-medium-shade), .3);
}
 
/* Input error */
:host[error] .input-container {
	border-color: rgb(var(--smoothly-danger-color));
}

:host[error] .input-container label {
	color: rgb(var(--smoothly-danger-color));
}

:host[error] .input-info {
	color: rgb(var(--smoothly-danger-color));
	opacity: 1
}
 
.input-info {
	padding-top: 0.3em;
	font-size: 0.9em;
	padding-left: 0.6em;
	opacity: 0.7;
}

/* Icon */
smoothly-icon {
	cursor: inherit;
	flex-shrink: 0;
}

.input-icon {
	z-index: 998;
}

:host([readonly][editable]) .input-icon, :host([value][clearable]) .input-icon  {
	cursor: pointer;
	transition: 0.6s;
	opacity: 0.6;
}

:host([readonly][editable]) .input-icon:hover, :host([value][clearable]) .input-icon:hover  {
	opacity: 1
}

:host[placement="float"] .input-icon, :host[placement="top"] .input-icon {
	margin-top: -1em;
}

/* Label */
label {
	cursor: inherit;
	user-select: none;
	font-weight: 600;
	font-size: 0.9em;
	white-space: nowrap;
}

:host[placement="top"] label {
	position: absolute;
	left: 0.3em;
	top: 0.2em;
	transform: scale(0.85);
}

:host[placement="float"] label {
	position: absolute;
	left: 0.5em;
	top: 50%;
	transform: translateY(-50%);
	transform-origin: top left;
	transition:0.15s ease all;
  -moz-transition:0.15s ease all;
  -webkit-transition:0.15s ease all;
}

:host[placement="outside"] label {
	position: absolute;
	left: 0.3em;
	top: -1.6em;
}

:host[placement="float"][focused] label, :host[placement="float"][value] label  {
	top: 0.2em;
	transform: scale(0.85);
}

/* Border layout */
:host[layout="plain"] .input-container {
	border: none
}
:host[layout="border"] .input-container {
	border-width: 1px;
	border-style: solid;
}
:host[layout="line"] .input-container {
	border-width: 1px;
	border-bottom-style: solid;
}
:host[layout="grid"] .input-container {
	border-width: .5px;
	border-style: solid;
	border-color: rgba(var(--smoothly-dark-color), .5);
}

/* Border radius */
:host[radius="default"] .input-container {
	border-radius: 0;
}
:host[radius="rounded"] .input-container {
	border-radius: 0.5em;
}
:host[radius="circle"] .input-container {
	border-radius: 1.5em;
}

.input-wrapper {
	position: relative;
}

/* Backdrop for Select, Date and Date-range */
.input-backdrop {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	z-index: 997;
	cursor: default;
}

/* Icon fills */
:host[fill="default"] smoothly-icon {
	fill: rgb(var(--smoothly-default-color));
}
:host[fill="primary"] smoothly-icon  {
	fill:  rgb(var(--smoothly-primary-color));
}
:host[fill="secondary"] smoothly-icon  {
	fill:  rgb(var(--smoothly-secondary-color));
}
:host[fill="tertiary"] smoothly-icon  {
	fill:  rgb(var(--smoothly-tertiary-color));
}
:host[fill="success"] smoothly-icon  {
	fill:  rgb(var(--smoothly-success-color));
}
:host[fill="warning"] smoothly-icon  {
	fill: rgb(var(--smoothly-warning-color));
}
:host[fill="danger"] smoothly-icon  {
	fill: rgb(var(--smoothly-danger-color));
}
:host[fill="light"] smoothly-icon  {
	fill: rgb(var(--smoothly-light-color));
}
:host[fill="medium"] smoothly-icon  {
	fill: rgb(var(--smoothly-medium-color));
}
:host[fill="dark"] smoothly-icon  {
	fill: rgb(var(--smoothly-dark-color));
}
