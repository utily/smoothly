:host {
	--background-color: var(--smoothly-secondary-tint), 1;
	--color: var(--smoothly-secondary-contrast);
	--border-color: var(--smoothly-secondary-contrast), 1;
	--border-highlight-color: var(--smoothly-secondary-contrast), 1;

	--label-color: var(--smoothly-secondary-contrast), 0.8;

	--selected-item-border-radius: 0.25rem;
	--selected-item-background-color: var(--smoothly-secondary-color), 1;
	--selected-item-color: 255, 255, 255, 1;
}

:host {
	display: block;
	position: relative;
	width: 100%;
	cursor: pointer;
	--intergiro-transition: all 200ms cubic-bezier(0.645, 0.045, 0.355, 1);
	transition: var(--intergiro-transition);
}

:host > div {
	display: flex;
	min-height: 3em;
	background-color: rgba(var(--background-color));
	align-items: center;
	border: none;
	max-height: var(--max-height);
	.icons > smoothly-icon {
		flex-shrink: 0;
		padding-left: 0.6em;
		stroke: rgba(var(--color), 0.4);
		fill: rgba(var(--color), 0.4);
		width: 1.5em !important;
		height: 1.5em !important;
		&:hover {
			fill: rgba(var(--color), 1);
		}
	}
	input {
		width: 100%;
		background-color: transparent;
		outline: none;
		border: none;
		cursor: pointer;
		color: rgb(var(--color));
		padding: 0 1em;
		font-family: var(--smoothly-font-family);
		font-size: 1.05em;
		&::placeholder {
			opacity: 1;
			text-overflow: ellipsis;
		}
	}
}

:host(:not(:focus-within)[multiple]) ul > li:last-child {
	/* Remove Input out of the CSS flow Layout. This way input takes up no extra space */
	position: absolute;
	pointer-events: none;
}

:host([label=""]) ul,
:host:not([label]) ul,
:host([label-setting="hide"]) ul {
	padding-top: 0.1em;
	padding-bottom: 0.1em;
}

label {
	position: absolute;
	top: 1em;
	left: 1em;
	color: rgba(var(--label-color));
	transition: var(--intergiro-transition);
	font-family: var(--smoothly-font-family);
	pointer-events: none;
	transform-origin: left;
}
:host([has-selection]) label {
	display: var(--label-display);
}
:host([has-selection]) label,
:host(:focus-within) label {
	transform: translateY(-1.2em) scale(0.7);
}

:host(:hover) smoothly-icon[data-arrow],
:host(:focus-within) smoothly-icon[data-arrow] {
	stroke: rgba(var(--color), 1);
}
:host smoothly-icon[data-arrow] {
	pointer-events: none;
}
:host(:not([is-open])) smoothly-icon[data-arrow="up"] {
	display: none;
}
:host([is-open]) smoothly-icon[data-arrow="down"] {
	display: none;
}
:host(:not([has-selection])) smoothly-icon:not([data-arrow]) {
	display: none;
}

:host smoothly-menu-options {
	position: absolute;
	z-index: 1;
}
:host(:not([is-open])) > smoothly-menu-options {
	/* hide options by default */
	display: none;
}
