:host {
	--input-padding-side: .5rem;
	--input-value-padding-top: 1.25rem;
	--input-value-padding-bottom: .25rem;
	--input-min-height: 3rem;
	min-height: var(--input-min-height);
	box-sizing: border-box;
	border-radius: var(--smoothly-input-border-radius);
}

:host[looks="border"]::slotted(smoothly-picker-menu smoothly-input),
:host[looks="border"] {
	border: rgb(var(--smoothly-input-border)) solid 1px;
}

:host[looks="border"][readonly] {
	border: transparent solid 1px;
}

:host[looks="line"]::slotted(smoothly-picker-menu smoothly-input),
:host[looks="line"] {
	border-bottom: rgb(var(--smoothly-input-border)) solid 1px;
}

:host[looks="line"][readonly] {
	border-bottom: transparent solid 1px;
}

:host[looks="grid"] {
  flex-grow: 1;
  flex-basis: 40%;
  box-shadow: 0px 0px 0px 1px rgb(var(--smoothly-input-border));
  border: none;
}
:host[looks="grid"][readonly] {
	box-shadow: 0px 0px 0px 1px rgba(var(--smoothly-input-border-readonly));
}

:host[looks="transparent"] {
	border: none;
}

:host[looks="transparent"][readonly],
:host[looks="transparent"]:not(:focus-within) {
	background-color: transparent;
}

:host[looks="transparent"][readonly]>input,
:host[looks="transparent"]:not(:focus-within)>input {
	background: transparent;
}

:host[looks="transparent"]:not([readonly]):focus-within {
	outline: 1px solid rgb(var(--smoothly-input-border));
}

/* --- label --- */

:host ::slotted([slot=label]),
:host .label {
	position: absolute;
	top: .6rem;
	opacity: 0.8;
	user-select: none;
	cursor: inherit;
	transform-origin: top left;
	transition: transform 100ms ease;
}

:host.floating-label ::slotted([slot=label]),
:host.has-value ::slotted([slot=label]),
:host[placeholder] ::slotted([slot=label]),
:host.has-value .label,
:host[placeholder] .label,
:host:not([readonly]):focus-within .label.float-on-focus {
	top: .2rem;
	transform: scale(0.8);
}

:host:not([show-label]):not(.show-label) .label {
	display: none;
}
