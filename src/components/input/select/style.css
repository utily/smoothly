@import "../shared.css";

:host {
	display: flex;
	justify-content: center;
	flex-direction: column;
	position: relative;
	background-color: rgb(var(--background-color, var(--smoothly-color-shade)));
	min-height: 2.8em;
}

:host.icon {
	width: fit-content;
	flex-direction: column;
}

:host>main,
:host>main>* {
	height: 100%;
	display: flex;
	align-items: center;
	cursor: default;
	padding: .7em .6em;
	position: relative;
}

:host::slotted(label) {
	position: absolute;
	left: 0.4em;
	top: 0.6em;
	opacity: 0.8;
	transform-origin: top left;
	transition: transform 100ms ease;
}

:host.has-value::slotted(label),
:host:not(.has-value)[placeholder]::slotted(label) {
	top: 0.4em;
	transform: scale(0.6);
}

:host.has-value:has(label) main,
:host:not(.has-value)[placeholder] main  {
 padding-bottom: 0;
 padding-left: .8em;
 padding-top: 1em;
}

:host>div>nav {
	display: flex;
	flex-direction: column;
	position: absolute;
	z-index: 10;
	height: var(--menu-height, unset);
	overflow-y: auto;
}

:host>div>nav::slotted(smoothly-item){
	padding: .6em;
}

:host>aside {
	position: absolute;
	top: 0;
	left: 5em;
	z-index: 10;
	background-color: rgb(var(--smoothly-tertiary-color));
	color: rgb(var(--smoothly-tertiary-contrast));
	height: 1.25rem;
	border-radius: 0.3rem;
	padding: 0.3rem;
	display: flex;
	align-items: center;
}

:host().missing>aside {
	background-color: rgb(var(--smoothly-warning-color));
	color: rgb(var(--smoothly-warning-contrast));
}

.hidden {
	display: none;
}

:host>section {
	position: fixed;
	top: 0px;
	left: 0px;
	width: 100vw;
	height: 100vh;
	z-index: 10;
}
:host::slotted(smoothly-input-reset) {
	position: absolute;
	right: .4em;
	z-index: 10;
}
